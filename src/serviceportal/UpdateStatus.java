/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * UpdateStatus.java
 *
 * Created on Aug 23, 2015, 3:31:10 PM
 */

package serviceportal;

import java.sql.*;
import java.text.*;
import java.util.*;
import javax.swing.JOptionPane;


/**
 *
 * @author sonytara
 */
public class UpdateStatus extends javax.swing.JFrame {


    String email;
    String sid;
    int adv;
    /** Creates new form UpdateStatus */
    public UpdateStatus() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        sidTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        remarksTextArea = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        updateButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(serviceportal.ServicePortalApp.class).getContext().getResourceMap(UpdateStatus.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N
        setResizable(false);

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        sidTextField.setText(resourceMap.getString("sidTextField.text")); // NOI18N
        sidTextField.setEnabled(false);
        sidTextField.setName("sidTextField"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        remarksTextArea.setColumns(20);
        remarksTextArea.setRows(5);
        remarksTextArea.setText(resourceMap.getString("remarksTextArea.text")); // NOI18N
        remarksTextArea.setToolTipText(resourceMap.getString("remarksTextArea.toolTipText")); // NOI18N
        remarksTextArea.setName("remarksTextArea"); // NOI18N
        jScrollPane1.setViewportView(remarksTextArea);

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Pending", "Failed", "Cancelled", "Completed" }));
        jComboBox1.setName("jComboBox1"); // NOI18N

        jPanel1.setName("jPanel1"); // NOI18N

        updateButton.setText(resourceMap.getString("updateButton.text")); // NOI18N
        updateButton.setName("updateButton"); // NOI18N
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(63, Short.MAX_VALUE)
                .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(sidTextField)
                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(sidTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(106, 106, 106))))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-600)/2, (screenSize.height-400)/2, 600, 400);
    }// </editor-fold>//GEN-END:initComponents

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        Connection con1=null;
        
         DateFormat df = new SimpleDateFormat("dd-MMM-yy");
         DateFormat dt = new SimpleDateFormat("HH:mm");
           Calendar cal = Calendar.getInstance();
           boolean update = false;
        try
        {
           Class.forName("oracle.jdbc.OracleDriver");
            con1=DriverManager.getConnection("jdbc:oracle:thin:digital/digital@//localhost:1521/XE");
            Statement stmt = con1.createStatement();
                    
          String remarks = remarksTextArea.getText();
            String  sql="update  status set remarks='"+remarks+"',status='"+jComboBox1.getSelectedItem().toString()
                   +"',status_date='"+df.format(cal.getTime())+"' where receipt_no like '%"+ServiceId+"%'";
           

            
           
            int extracharges = new AddCharges().getCharges(ServiceId);

            if(jComboBox1.getSelectedItem().toString().equals("Failed") || jComboBox1.getSelectedItem().toString().equals("Cancelled"))
            {
               System.out.print("insert into payments values('"+ServiceId+"',"+ -adv+",'"+ df.format(cal.getTime())+"','"+ dt.format(cal.getTime())+"','"+ ServicePortalApp.getUsername()+"')");
               stmt.executeUpdate("update complaint set balance="+ -adv+" where receipt_no like '%"+ServiceId+"%'");
              
               //  stmt.executeUpdate("insert into payments values('"+ServiceId+"',"+ -adv+",'advance','"+ df.format(cal.getTime())+"','"+ dt.format(cal.getTime())+"','"+ ServicePortalApp.getUsername()+"','Direct Cash')");

               if(extracharges>0)
               {
                   new AddCharges().updateCharges(ServiceId,-extracharges);
               }

            }
           if(remarks==null || remarks.equals(""))
           {
               JOptionPane.showMessageDialog(null,"Please enter remarks");
               return;
           }
           stmt.executeUpdate(sql);
           JOptionPane.showMessageDialog(null, "Updated Successfully");
           
            if(jComboBox1.getSelectedItem().toString().equals("Completed") && email!=null)
            {
              
                String msg="Dear Customer, Your Mobile phone service completed succesfully. Please collect your handset at " +
                        "service center receipt no:"+sid;
                Mailer.send("digitalcarekvl@gmail.com","a_123456",email,"Digital Electronics",msg);
            }

           if(jComboBox1.getSelectedItem().toString().equals("Failed") && email!=null)
            {

                String msg="Dear Customer, Unable to service your mobile phone. Please collect your handset at " +
                        "service center receipt no:"+sid;
                Mailer.send("digitalcarekvl@gmail.com","a_123456",email,"Digital Electronics",msg);
            }


           this.dispose();
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateStatus().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea remarksTextArea;
    private javax.swing.JTextField sidTextField;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables

String ServiceId;
    public int setServiceID(String id)
{
    ServiceId=id;
    Connection c= null;
    Statement s=null;
    ResultSet rs=null;
    try
    {
        c=DBConnection.getConnection();
        s=c.createStatement();
        rs=s.executeQuery("select * from complaint where receipt_no='"+ServiceId+"'");
        if(!rs.next())
        {
            JOptionPane.showMessageDialog(null,"Service ID not available","Error",JOptionPane.ERROR_MESSAGE);
            return -1;
        }
        email=rs.getString("email");
        sid=ServiceId;
        adv = rs.getInt("advance");

        sidTextField.setText(ServiceId);

    }
    catch(Exception e)
    {
        e.printStackTrace();
    }

    return 0;
}
}
